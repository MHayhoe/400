-=-=-=- Over400 AI -=-=-=-
Hadi Elzayn, Mohammad Fereydounian, Mikhail Hayhoe, and Harshat Kumar


The code is organized as follows:

Main Code:
- GameObject.py:  custom class for Game objects, which keep track of a single round
				  of play (but have the capability of tracking more than one game).
- test_models.py: trains a betting NN and playing NN online in batches. Can specify the
				  betting and playing strategies to be used (e.g. self-play), as well as
				  the reward, loss, and performance measures to save and/or plot.
- test_games.py:  tests different betting and playing strategies against one another by
				  playing full games, i.e. playing rounds until one player has 41+ points
				  and their teammate has 0+ points.

Helpers:
- Card.py: 		  custom class for Card objects
- Hand.py:		  custom class for Hand objects, which contain and keep track of lists of
				  Cards
- Deck.py: 		  custom class for Deck objects, contains a full set of Cards and can
				  shuffle and deal them.
- AIPlayer.py: 	  custom class for AIPlayer objects, which can accept playing and 
				  betting strategies (and possibly models), then return bets and
				  actions to a Game object.
- Loss.py:		  contains the custom loss function for the betting NN.
- Models.py:	  contains the architecture for the betting and playing NN. Allows them
				  to be built from scratch (random initial weights) and parameters to be
				  initialized.
- heuristicAI.py: contains the logic for the Heuristic AI player, which plays based on
				  an encoded human strategy.


The other directories are organized as follows:

Data:
- Contains data generated via self-play of different strategies, used to train betting
  neural nets.

Extra Scripts:
- Contains a number of additional scripts that are outdated, or were used to produce data
  from which to train betting networks for the baseline strategies, or to train those same
  networks, etc.

Models:
- Contains models saved at different points from test_models, with different parameters,
  neural net architecture, etc.
  
Plots:
- Contains plots of data, mostly generated by test_models.py.

Report:
- Contains files used for writing the final report.

Results:
- Saved data from games played, mostly generated by test_games.py.

Slides:
- Contains files used for making the project spotlight slides.